{
  "_args": [
    [
      {
        "raw": "github-api-simple@git://github.com/jywarren/github-api-simple.git#patch-1",
        "scope": null,
        "escapedName": "github-api-simple",
        "name": "github-api-simple",
        "rawSpec": "git://github.com/jywarren/github-api-simple.git#patch-1",
        "spec": "git://github.com/jywarren/github-api-simple.git#patch-1",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:jywarren/github-api-simple.git#patch-1",
          "sshUrl": "git+ssh://git@github.com/jywarren/github-api-simple.git#patch-1",
          "httpsUrl": "git+https://github.com/jywarren/github-api-simple.git#patch-1",
          "gitUrl": "git://github.com/jywarren/github-api-simple.git#patch-1",
          "shortcut": "github:jywarren/github-api-simple#patch-1",
          "directUrl": "https://raw.githubusercontent.com/jywarren/github-api-simple/patch-1/package.json"
        }
      },
      "/home/warren/sites/community-portrait"
    ]
  ],
  "_from": "git://github.com/jywarren/github-api-simple.git#patch-1",
  "_id": "github-api-simple@0.0.6",
  "_inCache": true,
  "_location": "/github-api-simple",
  "_phantomChildren": {
    "ms": "2.0.0"
  },
  "_requested": {
    "raw": "github-api-simple@git://github.com/jywarren/github-api-simple.git#patch-1",
    "scope": null,
    "escapedName": "github-api-simple",
    "name": "github-api-simple",
    "rawSpec": "git://github.com/jywarren/github-api-simple.git#patch-1",
    "spec": "git://github.com/jywarren/github-api-simple.git#patch-1",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:jywarren/github-api-simple.git#patch-1",
      "sshUrl": "git+ssh://git@github.com/jywarren/github-api-simple.git#patch-1",
      "httpsUrl": "git+https://github.com/jywarren/github-api-simple.git#patch-1",
      "gitUrl": "git://github.com/jywarren/github-api-simple.git#patch-1",
      "shortcut": "github:jywarren/github-api-simple#patch-1",
      "directUrl": "https://raw.githubusercontent.com/jywarren/github-api-simple/patch-1/package.json"
    }
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "git://github.com/jywarren/github-api-simple.git#07e54076168539d67d5df84815f0e1f00a9c4fd5",
  "_shasum": "3e030fb57b64a14b0cd1818702c63262f10c53ac",
  "_shrinkwrap": null,
  "_spec": "github-api-simple@git://github.com/jywarren/github-api-simple.git#patch-1",
  "_where": "/home/warren/sites/community-portrait",
  "author": {
    "name": "Michiel van der Velde",
    "email": "michiel@michielvdvelde.nl"
  },
  "bugs": {
    "url": "https://github.com/MichielvdVelde/github-api-simple/issues"
  },
  "dependencies": {
    "debug": "^2.2.0",
    "request-promise": "^1.0.2"
  },
  "description": "Simple Github API wrapper for unauthenticated end points",
  "devDependencies": {},
  "gitHead": "07e54076168539d67d5df84815f0e1f00a9c4fd5",
  "homepage": "https://github.com/MichielvdVelde/github-api-simple#readme",
  "keywords": [
    "github",
    "api",
    "wrapper",
    "simple"
  ],
  "license": "MIT",
  "main": "github-api.js",
  "name": "github-api-simple",
  "optionalDependencies": {},
  "readme": "# Simple GitHub API wrapper for node.js\r\n\r\nLots of times you don't need a full-fledged GitHub API client with authentication and what-not. Maybe you just want to load public data, or index and process your public repositories somehow. This simple GitHub API 'wrapper' provides the basics and can access all non-restricted API end points. And it's easily extendable too!\r\n\r\nThe wrapper loads a JSON file (`routes.json`) which contains a name space, a method name and an end point URI. Together, all methods are dynamically created at startup-time. This makes it very easy to add new end points in the future. The library makes use of promises through [request-promise](https://github.com/request/request-promise).\r\n\r\nCurrently _not all suitable end points_ have been added. You can either wait for me to add them to `routes.json`, or you can do it yourself (and submit a pull request, of course! ;)).\r\n\r\n## Install\r\n\r\n```\r\nnpm install github-api-simple\r\n```\r\n\r\n## Usage\r\n\r\n```js\r\nconst SimpleApi = require('github-api-simple');\r\nlet api = new SimpleApi(); // takes an options argument, see below\r\n\r\nsimpleApi.Repositories.getReposForUser('MichielvdVelde')\r\n\t.then(function(repos) {\r\n\t\tconsole.log('This user has %d repos', repos.length);\r\n\t});\r\n```\r\n\r\nThe constructor takes an options argument, which is fed to [request-promise](https://github.com/request/request-promise). The defaults are:\r\n\r\n```js\r\nconst DEFAULT_OPTIONS = {\r\n\t'baseUrl': 'https://api.github.com',\r\n\t'headers': {\r\n\t\t'User-Agent': 'github-api-simple v' + pkg.version + ' [nodejs] [https://github.com/MichielvdVelde/github-api-simple]'\r\n\t},\r\n\t'json': true\r\n};\r\n```\r\n\r\nYou can change the `User-Agent` header to set your own, the GitHub API requires one.\r\n\r\n## Routes\r\n\r\n### Users\r\n\r\n#### Single user\r\n\r\nAll route methods take an optional `options` object as the last argument. This object is `extend()`-ed with the options you gave when usig `new`. For example, if you want to get all your repositories sorted by when it was last pushed to, you can:\r\n\r\n```js\r\nlet options = {\r\n\t'qs': {\r\n\t\t'sort': 'pushed',\r\n\t\t'direction': 'desc' // optional, GitHub API uses 'desc' by default for 'pushed'\r\n\t}\r\n}\r\nsimpleApi.Users.getUser('MichielvdVelde', options)\r\n\t.then(function(repos) {\r\n\t\tconsole.log('This user has %d repos', repos.length);\r\n\t});\r\n```\r\n\r\n[GitHub API reference](https://developer.github.com/v3/users/#get-a-single-user)\r\n\r\n```js\r\nsimpleApi.Users.getUser('MichielvdVelde')\r\n\t.then(function(repos) {\r\n\t\tconsole.log('This user has %d repos', repos.length);\r\n\t});\r\n```\r\n\r\n#### All users\r\n\r\n[GitHub API reference](https://developer.github.com/v3/users/#get-all-users)\r\n\r\n```js\r\nsimpleApi.Users.getUsers()\r\n\t.then(function(users) {\r\n\t\tconsole.log('I got %d users', users.length);\r\n\t});\r\n```\r\n\r\n### Repositories\r\n\r\n#### Repositories for a single user\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/#list-user-repositories)\r\n\r\n```js\r\nsimpleApi.Repositories.getReposForUser('MichielvdVelde')\r\n\t.then(function(repos) {\r\n\t\tconsole.log('This user has %d repos', repos.length);\r\n\t});\r\n```\r\n\r\n#### Single repository\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/#get)\r\n\r\n```js\r\nsimpleApi.Repositories.getRepo('MichielvdVelde', 'github-api-simple')\r\n\t.then(function(repo) {\r\n\t\tconsole.log('This repo has %d watchers', repo.watchers_count);\r\n\t});\r\n```\r\n\r\n\r\n#### Contributors\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/#list-contributors)\r\n\r\n```js\r\nsimpleApi.Repositories.getRepoContributors('MichielvdVelde', 'github-api-simple')\r\n\t.then(function(contributors) {\r\n\t\tconsole.log('This repo has %d contributors', contributors.length);\r\n\t});\r\n```\r\n\r\n\r\n#### Languages\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/#list-languages)\r\n\r\n```js\r\nsimpleApi.Repositories.getRepoLanguages('MichielvdVelde', 'github-api-simple')\r\n\t.then(function(languages) {\r\n\t\tfor(let language of languages) {\r\n\t\t\tconsole.log('language %s, %d bytes', language, languages[language]);\r\n\t\t}\r\n\t});\r\n```\r\n\r\n\r\n#### Teams\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/#list-teams)\r\n\r\n```js\r\nsimpleApi.Repositories.getRepoTeams('MichielvdVelde', 'github-api-simple')\r\n\t.then(function(teams) {\r\n\t\tif(teams) {\r\n\t\t\tconsole.log('This repo has %d teams', teams.length);\r\n\t\t}\r\n\t});\r\n```\r\n\r\n\r\n#### Tags\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/#list-tags)\r\n\r\n```js\r\nsimpleApi.Repositories.getRepoTags('MichielvdVelde', 'github-api-simple')\r\n\t.then(function(tags) {\r\n\t\tconsole.log('This repo has %d tags', tags.length);\r\n\t});\r\n```\r\n\r\n\r\n#### Branches\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/#list-branches)\r\n\r\n```js\r\nsimpleApi.Repositories.getRepoBranches('MichielvdVelde', 'github-api-simple')\r\n\t.then(function(branches) {\r\n\t\tconsole.log('This repo has %d branches', branches.length);\r\n\t});\r\n```\r\n\r\n\r\n#### Single branch\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/#get-branche)\r\n\r\n```js\r\nsimpleApi.Repositories.getRepoBranche('MichielvdVelde', 'github-api-simple', 'master')\r\n\t.then(function(branche) {\r\n\t\tconsole.log('Latest commit on master is %s', branche.commit.sha);\r\n\t});\r\n```\r\n\r\n\r\n#### Contents of a repository file\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/contents/#get-contents)\r\n\r\n```js\r\nsimpleApi.Repositories.getRepoFile('MichielvdVelde', 'github-api-simple', 'README.md')\r\n\t.then(function(content) {\r\n\t\tconsole.log('Readme sha is %s', content.sha);\r\n\t});\r\n```\r\n\r\n\r\n#### Repository commits\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/commits/#list-commits-on-a-repository)\r\n\r\n```js\r\nsimpleApi.Repositories.getRepoCommits('MichielvdVelde', 'github-api-simple')\r\n\t.then(function(commits) {\r\n\t\tconsole.log('This repo has %d commits', commits.length);\r\n\t});\r\n```\r\n\r\n\r\n#### Repository single commit\r\n\r\n[GitHub API reference](https://developer.github.com/v3/repos/commits/#get-a-single-commit)\r\n\r\n```js\r\nsimpleApi.Repositories.getRepoCommit('MichielvdVelde', 'github-api-simple', '6dcb09b5b57875f334f61aebed695e2e4193db5e')\r\n\t.then(function(commit) {\r\n\t\tconsole.log('Commit %s says %s', commit.sha, commit.commit.message);\r\n\t});\r\n```\r\n\r\n### Followers\r\n\r\n\r\n#### Get followers for user\r\n\r\n[GitHub API reference](https://developer.github.com/v3/users/followers/#list-followers-of-a-user)\r\n\r\n```js\r\nsimpleApi.Followers.getFollowersForUser('MichielvdVelde')\r\n\t.then(function(followers) {\r\n\t\tconsole.log('This user has %d followers', followers.length);\r\n\t});\r\n```\r\n\r\n\r\n#### Get followers by user\r\n\r\n[GitHub API reference](https://developer.github.com/v3/users/followers/#list-followers-of-a-user)\r\n\r\n```js\r\nsimpleApi.Followers.getFollowersByUser('MichielvdVelde')\r\n\t.then(function(followers) {\r\n\t\tconsole.log('This user follows %d others', followers.length);\r\n\t});\r\n```\r\n\r\n### Issues\r\n\r\n\r\n#### Get issues for repository\r\n\r\n[GitHub API reference](https://developer.github.com/v3/issues/#list-issues-for-a-repository)\r\n\r\n```js\r\nsimpleApi.Issues.getIssuesForRepo('MichielvdVelde', 'github-api-simple')\r\n\t.then(function(issues) {\r\n\t\tconsole.log('This repo has %d issues', issues.length);\r\n\t});\r\n```\r\n\r\n\r\n#### Get a single issue\r\n\r\n[GitHub API reference](https://developer.github.com/v3/issues/#get-a-single-issue)\r\n\r\n```js\r\nsimpleApi.Issues.getIssue('MichielvdVelde', 'github-api-simple', 138)\r\n\t.then(function(issue) {\r\n\t\tconsole.log('This issue is %s', issue.state);\r\n\t});\r\n```\r\n\r\n\r\n#### Get issue comments\r\n\r\n[GitHub API reference](https://developer.github.com/v3/issues/comments/#list-comments-on-an-issue)\r\n\r\n```js\r\nsimpleApi.Issues.getIssueComments('MichielvdVelde', 'github-api-simple', 138)\r\n\t.then(function(comments) {\r\n\t\tconsole.log('This issue has %d comments', comments.length);\r\n\t});\r\n```\r\n\r\n\r\n#### Get issue comments\r\n\r\n[GitHub API reference](https://developer.github.com/v3/issues/comments/#list-comments-in-a-repository)\r\n\r\n```js\r\nsimpleApi.Issues.getRepoIssues('MichielvdVelde', 'github-api-simple')\r\n\t.then(function(issues) {\r\n\t\tconsole.log('This repo has %d issues', issues.length);\r\n\t});\r\n```\r\n\r\n\r\n#### Get issue comment\r\n\r\n[GitHub API reference](https://developer.github.com/v3/issues/comments/#get-a-single-comment)\r\n\r\n```js\r\nsimpleApi.Issues.getIssueComment('MichielvdVelde', 'github-api-simple', 96)\r\n\t.then(function(comment) {\r\n\t\tconsole.log('Comment by %s', comment.owner.login);\r\n\t});\r\n```\r\n\r\n### Milestones\r\n\r\n\r\n#### Get all milestones for a repository\r\n\r\n[GitHub API reference](https://developer.github.com/v3/issues/milestones/#list-milestones-for-a-repository)\r\n\r\n```js\r\nsimpleApi.Milestones.getRepoMilestones('MichielvdVelde', 'github-api-simple')\r\n\t.then(function(milestones) {\r\n\t\tconsole.log('This repo has %d milestones', milestones.length);\r\n\t});\r\n```\r\n\r\n\r\n#### Get a single milestone\r\n\r\n[GitHub API reference](https://developer.github.com/v3/issues/milestones/#get-a-single-milestone)\r\n\r\n```js\r\nsimpleApi.Milestones.getMilestone('MichielvdVelde', 'github-api-simple', 544)\r\n\t.then(function(milestone) {\r\n\t\tconsole.log('Milestone title i %s', milestone.title);\r\n\t});\r\n```\r\n\r\n# To do\r\n\r\n* Add the rest of the applicable API end points to the routes file\r\n* Add paging support\r\n* Make rate limiting headers available\r\n* Write some tests\r\n\r\n# Changelog\r\n\r\n* 0.0.4 - 0.0.5 10 December 2015\r\n  * (0.0.6) Added `Repositories.getRepoCommits()` and `Repositories.getRepoCommit()`\r\n  * (0.0.5) Added `Repositories.getRepositoryFile(username, reponame, filename)`\r\n  * (0.0.4) Added a lot of new end points to `routes.json`\r\n  * (0.0.4) Fixed some readme mistakes\r\n* 0.0.1 - 0.0.3 - 9 December 2015\r\n  * (0.0.3) Improved readme\r\n  * (0.0.2) Moved `routes.json` to dir `assets`\r\n  * (0.0.2) Fixed stupid-ass path error\r\n  * (0.0.1) Initial commit\r\n\r\n## License\r\n\r\nCopyright 2015 Michiel van der Velde.\r\n\r\nThis software is licensed under [the MIT License](LICENSE).\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/MichielvdVelde/github-api-simple.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "0.0.6"
}
